{"ast":null,"code":"var _jsxFileName = \"/Users/suhaas/Desktop/udemy-react/food-order-app/code/src/Components/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Input } from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MealItemForm = props => {\n  _s();\n\n  const [amountisValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount\" + props.id,\n        type: \"number\",\n        min: `1`,\n        max: `5`,\n        step: `1`,\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add +\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !amountisValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"please enter valid amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"aTIBhyZHolYGdqx/dA+ANIE8Rw8=\");\n\n_c = MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/suhaas/Desktop/udemy-react/food-order-app/code/src/Components/Meals/MealItem/MealItemForm.js"],"names":["React","useRef","useState","Input","classes","MealItemForm","props","amountisValid","setAmountIsValid","amountInputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAHxB,EAIE;AACER,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACF;AACD;AACF,GAbD;;AAeA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLW,QAAAA,EAAE,EAAE,WAAWd,KAAK,CAACc,EADhB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAG,GAHD;AAILC,QAAAA,GAAG,EAAG,GAJD;AAKLC,QAAAA,IAAI,EAAG,GALF;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcG,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Input } from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\n\nexport const MealItemForm = (props) => {\n  const [amountisValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 5\n    ) {\n        setAmountIsValid(false)\n      return;\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input\n        ref={amountInputRef}\n        label=\"Amount\"\n        input={{\n          id: \"amount\" + props.id,\n          type: \"number\",\n          min: `1`,\n          max: `5`,\n          step: `1`,\n          defaultValue: \"1\",\n        }}\n      />\n      <button>Add +</button>\n      {!amountisValid && <p>please enter valid amount</p>}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}