{"ast":null,"code":"var _jsxFileName = \"/Users/suhaas/Desktop/udemy-react/food-order-app/code/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  const updatedItems = state.items.concat(action.item);\n  const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n  if (action.type === \"ADD\") {\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    return {};\n  }\n\n  return defaultCartState;\n};\n\nexport const CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addItemsHandler = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemsHandler = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemsHandler,\n    removeItems: removeItemsHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/suhaas/Desktop/udemy-react/food-order-app/code/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updatedItems","concat","item","updatedTotalAmount","price","amount","type","CartProvider","props","cartState","dispatchCart","addItemsHandler","removeItemsHandler","id","cartContext","addItems","removeItems","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMC,YAAY,GAAGF,KAAK,CAACH,KAAN,CAAYM,MAAZ,CAAmBF,MAAM,CAACG,IAA1B,CAArB;AACA,QAAMC,kBAAkB,GACtBL,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYE,KAAZ,GAAoBL,MAAM,CAACG,IAAP,CAAYG,MADtD;;AAEA,MAAIN,MAAM,CAACO,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO;AACLX,MAAAA,KAAK,EAAEK,YADF;AAELJ,MAAAA,WAAW,EAAEO;AAFR,KAAP;AAID;;AACD,MAAIJ,MAAM,CAACO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,EAAP;AACD;;AACD,SAAOZ,gBAAP;AACD,CAdD;;AAgBA,OAAO,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMiB,eAAe,GAAIT,IAAD,IAAU;AAChCQ,IAAAA,YAAY,CAAC;AACXJ,MAAAA,IAAI,EAAE,KADK;AAEXJ,MAAAA,IAAI,EAAEA;AAFK,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMU,kBAAkB,GAAIC,EAAD,IAAQ;AACjCH,IAAAA,YAAY,CAAC;AACXJ,MAAAA,IAAI,EAAE,QADK;AAEXO,MAAAA,EAAE,EAAEA;AAFO,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,QAAQ,EAAEJ,eAHQ;AAIlBK,IAAAA,WAAW,EAAEJ;AAJK,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BM;;GAAMV,Y;;KAAAA,Y","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const updatedItems = state.items.concat(action.item);\n  const updatedTotalAmount =\n    state.totalAmount + action.item.price * action.item.amount;\n  if (action.type === \"ADD\") {\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    return {};\n  }\n  return defaultCartState;\n};\n\nexport const CartProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addItemsHandler = (item) => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemsHandler = (id) => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemsHandler,\n    removeItems: removeItemsHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}